version: '3.8'

services:
  # Backend da aplicação
  tech10-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tech10-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
    env_file:
      - ./backend/.env
    volumes:
      - ./backend/database:/app/database
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
    networks:
      - tech10-network
    depends_on:
      - nginx
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx - Proxy reverso e servidor web
  nginx:
    image: nginx:alpine
    container_name: tech10-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - .:/usr/share/nginx/html:ro
      - ./backend/uploads:/usr/share/nginx/html/uploads:ro
    networks:
      - tech10-network
    depends_on:
      - tech10-backend

  # Redis - Cache (opcional)
  redis:
    image: redis:7-alpine
    container_name: tech10-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - tech10-network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-tech10redis}

networks:
  tech10-network:
    driver: bridge

volumes:
  redis-data:
    driver: local